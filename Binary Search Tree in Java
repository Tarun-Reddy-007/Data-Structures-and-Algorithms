class BST{
    Node root;
    BST(){
        this.root = null;
    }
    void insert(int data){
        root = insertrec(root, data);
    }
    Node insertrec(Node root, int data){
        if(root == null){
            root = new Node(data);
            return root;
        }
        if(data<=root.data){
            root.left = insertrec(root.left, data);
        }
        else{
            root.right = insertrec(root.right, data);
        }
        return root;   
    }
    
    boolean search(int data){
        return searchrec(root, data);
    }
    
    boolean searchrec(Node root, int data){
        if(root==null){
            return false;
        }
        if(root.data == data){
            return true;
        }
        if(data <= root.data){
            return searchrec(root.left, data);
        }
        else{
            return searchrec(root.right, data);
        }
    }
    void inorder(){
        inorderrec(root);
    }
    void inorderrec(Node root){
        if(root != null){
            inorderrec(root.left);
            System.out.print(root.data + " --> ");
            inorderrec(root.right);
        }
    }
    public static void main(String[] args){
        BST bstree = new BST();
        bstree.insert(60);
        bstree.insert(30);
        bstree.insert(80);
        bstree.insert(70);
        bstree.insert(10);
        bstree.insert(20);
        bstree.insert(40);
        bstree.insert(90);
        bstree.insert(50);
        
        System.out.println(bstree.search(30));
        
        bstree.inorder();
    }
}

class Node{
    int data;
    Node left, right;
    Node(int data){
        this.data = data;
        this.left = null;
        this.right = null;
    }
}

//Output

/*
true
10 --> 20 --> 30 --> 40 --> 50 --> 60 --> 70 --> 80 --> 90 --> 
*/
